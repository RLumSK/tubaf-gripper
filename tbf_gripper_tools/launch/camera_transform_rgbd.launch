<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="camera_name" default="gripper_camera" />
    <arg name="service_pkg" default="rgbd_odometry_service" />
    <arg name="service_script" default="odom_server.py" />
    <arg name="service_name" default="get_odom_at" />
    <arg name="service_type" default="GetOdometryAt" />

    <node pkg="rtabmap_ros" type="rgbd_odometry" name="$(arg camera_name)_rgbd_odometry" output="log">
        <remap from="rgb/image"         to="$(arg camera_name)/rgb/image_rect_color" />
        <remap from="depth/image"       to="$(arg camera_name)/depth_registered/image_raw" />
        <remap from="rgb/camera_info"   to="$(arg camera_name)/rgb/camera_info" />
        <remap from="rgbd_image"        to="$(arg camera_name)/rgbd" />
        <remap from="odom"              to="$(arg camera_name)/odom" />

        <param name="frame_id"                      type="string"   value="base_link" />
        <param name="odom_frame_id"                 type="string"   value="$(arg camera_name)_link" />
        <param name="wait_for_transform_duration"   type="string"   value="0.2" />
        <param name="approx_sync"                   type="bool"     value="True" />
        <param name="queue_size"                    type="int"      value="10" />
        <param name="subscribe_rgbd"                type="bool"     value="false" />
    </node>

    <node pkg="$(arg service_pkg)" type="$(arg service_script)" name="$(arg service_name)" output="screen">
        <param name="odometry_topic"    type="string"   value="/$(arg camera_name)/odom" />
        <param name="cache_size" value="10" />
    </node>

    <node pkg="tbf_gripper_tools" type="camera_service_interface.py" name="$(arg camera_name)_service_interface" output="screen">
		<param name="name" value="$(arg camera_name)" />
        <param name="odom_service_name" value="$(arg service_name)" />
        <param name="odom_service_type" value="$(arg service_type)" />
        <param name="odom_service_pkg" value="$(arg service_pkg)" />

         <!-- Python expression to access the time, translation and rotation of the request/response msg from the passed service-->
        <param name="py_time_str" value=".t0"/>
        <param name="py_translation_str" value=".odometry.pose.pose.position"/>
        <param name="py_rotation_str" value=".odometry.pose.pose.orientation"/>
    </node>
</launch>
