<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="camera_name" default="gripper_camera" />
    <arg name="service_pkg" default="tbf_gripper_tools" />
    <arg name="service_script" default="compute_cloud_transform.py" />
    <arg name="service_name" default="calc_point_cloud_transform" />
    <arg name="service_type" default="GetCameraTransform" />

    <!--Camera Interface using ICP -->
    <node pkg="$(arg service_pkg)" type="$(arg service_script)" name="$(arg service_name)" output="screen">
        <param name="base_frame"   type="string"    value="base_link" />
        <param name="camera_frame" type="string"    value="gripper_camera_rgb_optical_frame" />
        <param name="service_name" type="string"    value="$(arg service_name)" />
        <param name="threshold"    type="double"    value="0.02" />
        <param name="cloud_topic"  type="string"    value="/$(arg camera_name)/depth/points" />

        <param name="test"         type="bool"      value="False" />
    </node>

    <node pkg="tbf_gripper_tools" type="camera_service_interface.py" name="camera_service_interface" output="screen">
		<param name="name"              value="$(arg camera_name)" />
        <param name="odom_service_name" value="$(arg service_name)" />
        <param name="odom_service_type" value="$(arg service_type)" />
        <param name="odom_service_pkg"  value="$(arg service_pkg)" />

        <!-- Python expression to access the time, translation and rotation of the request/response msg from the passed service-->
        <param name="py_time_str" value=".time_stamp"/>
        <param name="py_translation_str" value=".transformation.translation"/>
        <param name="py_rotation_str" value=".transformation.rotation"/>
    </node>
</launch>
